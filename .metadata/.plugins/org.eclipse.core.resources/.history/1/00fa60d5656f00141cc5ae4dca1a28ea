package com.db.dbmanager;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import android.content.Context;
import android.os.AsyncTask;
import android.util.Log;

public abstract class DB extends AsyncTask<String, Void, String>{

	protected Context context;
	public static final String siteHost = "http://themeparksimulator.3eeweb.com/";

	public abstract void updateUI(String result);

	public DB(Context context){
		this.context = context;
	}

	@Override
	protected String doInBackground(String... params) {
		
		InputStream inputStream = null;
		BufferedReader buffReader;
		String readString = "";
		
		try {

			/* Try to make a connection and execute the PHP file */
			HttpClient httpclient = new DefaultHttpClient();
			HttpPost httppost = new HttpPost(siteHost + params[0]);
			HttpResponse response = httpclient.execute(httppost);
			HttpEntity entity = response.getEntity();
			inputStream = entity.getContent();

		} catch (IllegalStateException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			Log.e("com.db.dbmanager.DB", "Error in reading stream");
			e1.printStackTrace();
		}
		try {
			buffReader = new BufferedReader(new InputStreamReader(inputStream), 8);
			StringBuilder sb = new StringBuilder();
			String line = null;
			while ((line = buffReader.readLine()) != null) {
				sb.append(line + "\n");
			}
			inputStream.close();
			readString = sb.toString();
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return readString;
	}

	@Override
	protected void onPostExecute(String result){
		super.onPostExecute(result);
		updateUI(result);
	}

}
